#!/bin/bash

num=10

usage_exit() {
  echo "midl - output the middle part of the file " 2&>1
  echo "Usage: $0 [OPTION]" 2&>1
  echo "
  -n K   output the middle of K lines, instead of the middle 10;

  -h     display this help and exit

  More smaller number is preferentially printed.

  * When the line number is odd and -n argument is even.
  i.e)
    $ seq 3 | midl -n 2
    1
    2

  * When the line number is even and -n argument is odd.
  i.e)
    $ seq 4 | midl -n 1
    2
  " 2&>1
  exit 0
}

while getopts hn: OPT
do
  case "$OPT" in
    h) usage_exit
      ;;
    n) num=$OPTARG
      ;;
    *)
      echo "Didn't match anyoption" 2&>1; exit 1;
  esac
done

if [ -p /dev/stdin ]; then
  cat - | perl -ane '
    $a[$.]=$_;
    END{
      $b=($. / 2 - ('$num' / 2 )) + 1;
      $e=($. / 2 + ('$num' / 2));
      $b = 1  if $b < 1 ;
      $e = $. if $e > $.;
      for my $i ($b..$e) {
        print $a[$i]
      }
    }
  '
else
  echo "STDIN does not exist" 2&>1
  exit 1
fi

exit 0

